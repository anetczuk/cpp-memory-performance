#!/bin/bash

##
## This file is automatically generated from "@GENERATOR_FILE@". Changes will be lost.
##

set -eu

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

cd $SCRIPT_DIR

SCRIPT_NAME=$(basename "$0")
SCRIPT_NAME=${SCRIPT_NAME%.*}


argv=$@

run_benchmark=1
run_plot=1
priority=-1
while test $# != 0; do
    case "$1" in
	    --no-benchmark|-nb) run_benchmark=0 ;;
	    --no-plot|-np)      run_plot=0 ;;
        --priority)         priority="$2"
                            shift
                            ;;
	    *)  ;;
    esac
    shift
done


cores_num=$(grep -c ^processor /proc/cpuinfo)

echo "Detected cores: ${cores_num}"


DATA_DIR="$SCRIPT_DIR/data"

mkdir -p $DATA_DIR


benchmark_exec=$SCRIPT_DIR/benchmark_@DATA_TYPE@
raw_file_prefix=$DATA_DIR/@DATA_TYPE@_data_raw_core
plot_file_prefix=$DATA_DIR/@DATA_TYPE@_data_plot_core


if [ $run_benchmark -ne 0 ]; then
    command=
    if [ $priority -ne -1 ]; then
        ## sudo is required for nice
        command="sudo nice -$priority $benchmark_exec $argv"
    else
        command="$benchmark_exec $argv"
    fi
    echo "Executing: $command"
    $command
fi

if [ $run_plot -eq 0 ]; then
    exit 0
fi


## processing data
echo "Extracting data"
plot_data_files=""
for i in $(seq 1 $cores_num); do
    in_file=${raw_file_prefix}_${i}.txt
    data_file=${plot_file_prefix}_$i.txt
    awk -F" " '{print $1, $9, $3 $4}' $in_file > $data_file
    if [ -s "$data_file" ]; then
    	plot_data_files=$plot_data_files" "$data_file
    fi
done


plot_png="$DATA_DIR/${SCRIPT_NAME}.png"


if [ -z "$plot_data_files" ]; then
	echo "No data to plot"
else
	echo "Plotting"
	gnuplot -p -e '
				    set title "@PLOT_TITLE@"; 
				    filenames = "'"$plot_data_files"'";
				    output_png = "'"$plot_png"'"
				  ' plot_config_multi.gnu
fi
